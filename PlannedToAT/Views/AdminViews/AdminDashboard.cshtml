@model PlannedToAT.ViewModels.AdminDashboardViewModel
@using Newtonsoft.Json
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Admin Dashboard</title>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f5f7fa;
            margin: 0;
        }
        .navbar {
            background-color: #2d3e50;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .navbar a {
            color: white;
            text-decoration: none;
            margin-left: 15px;
            font-size: 14px;
        }
        .navbar .nav-right {
            display: flex;
            align-items: center;
        }
        .logout-button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 5px 10px;
            margin-left: 15px;
            border-radius: 4px;
            cursor: pointer;
        }
        .logout-button:hover {
            background-color: #c0392b;
        }
        .content {
            padding: 20px;
        }
        h2 {
            color: #2d3e50;
        }
        .chart-container {
            margin-bottom: 50px;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        .tab-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        .tab-buttons button {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            background-color: #e1e4e8;
            cursor: pointer;
        }
        .tab-buttons button.active {
            background-color: #2d3e50;
            color: white;
        }
        .tab-section {
            display: none;
        }
        .tab-section.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="navbar">
        <div><strong>Admin Dashboard</strong></div>
        <div class="nav-right">
            <a href="/Home/AdminDashboard?firstName=@Model.FirstName">Dashboard</a>
            <a href="/Reports/Reports">Reports</a>
            <a href="/Admin/Users">Users</a>
            <a href="/Admin/SurveyForm">Survey Form</a>
            <a href="/Admin/Settings">Settings</a>
            <form id="logoutForm" asp-controller="AdminInput" asp-action="Logout" method="post">
                <button type="submit" class="logout-button" onclick="return confirmLogout();">Logout</button>
            </form>
        </div>
    </div>

    <div class="content">
        <h2>Welcome, @ViewData["FirstName"]</h2>
        <div id="overview" class="tab-section active">
            <div class="chart-container" id="usersByState"></div>
            <div class="chart-container" id="signupsByMonth"></div>
            <div class="chart-container" id="formStatus"></div>
            <div class="chart-container" id="sessionSignups"></div>
        </div>
    </div>
    <script>
        function confirmLogout() {
            return confirm("Are you sure you want to log out?");
        }

        function switchTab(tabId) {
            document.querySelectorAll('.tab-section').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-link').forEach(btn => btn.classList.remove('active'));
            document.getElementById(tabId).classList.add('active');
            event.target.classList.add('active');
        }

        Highcharts.chart('usersByState', {
            chart: { type: 'column' },
            title: { text: 'Participants by State' },
            xAxis: { categories: @Html.Raw(JsonConvert.SerializeObject(Model.States)) },
            yAxis: { title: { text: 'Number of Participants' } },
            series: [{ name: 'Participants', data: @Html.Raw(JsonConvert.SerializeObject(Model.UsersPerState)) }]
        });

        Highcharts.chart('signupsByMonth', {
            chart: { type: 'line' },
            title: { text: 'Signups by Month' },
            xAxis: { categories: @Html.Raw(JsonConvert.SerializeObject(Model.Months)) },
            yAxis: { title: { text: 'Signups' } },
            series: [{ name: 'Signups', data: @Html.Raw(JsonConvert.SerializeObject(Model.SignupsPerMonth)) }]
        });

        Highcharts.chart('sessionSignups', {
            chart: { type: 'column' },
            title: { text: 'Session Signups' },
            xAxis: { categories: @Html.Raw(JsonConvert.SerializeObject(Model.SessionSignupDates)) },
            yAxis: { title: { text: 'Signups' } },
            series: [{ name: 'Signups', data: @Html.Raw(JsonConvert.SerializeObject(Model.SignupCounts)) }]
        });

        Highcharts.chart('formStatus', {
            chart: { type: 'pie' },
            title: { text: 'Form Completion Status' },
            series: [{
                name: 'Forms',
                colorByPoint: true,
                data: [
                    { name: 'Completed', y: @Model.CompletedForms },
                    { name: 'In Progress', y: @Model.InProgressForms },
                    { name: 'Not Started', y: @Model.NotStartedForms }
                ]
            }]
        });
    </script>
</body>
</html>
